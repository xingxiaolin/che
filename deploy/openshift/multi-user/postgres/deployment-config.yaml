apiVersion: v1
kind: DeploymentConfig
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    io.kompose.service: postgres
  strategy:
    resources: {}
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: postgres
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          value: keycloak
        - name: POSTGRESQL_PASSWORD
          value: keycloak
        - name: POSTGRESQL_DATABASE
          value: keycloak
        - name: "CHE_POSTGRES_USERNAME"
          value: "pgche"
        - name: "CHE_POSTGRES_PASSWORD"
          value: "pgchepassword"
        - name: "CHE_POSTGRES_DATABASE"
          value: "dbche"
        image: '${IMAGE_POSTGRES}'
        imagePullPolicy: Always
        name: postgres
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5432
          timeoutSeconds: 1
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - '-i'
              - '-c'
              - >-
                psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d
                $POSTGRESQL_DATABASE -c 'SELECT 1'
          failureThreshold: 10
          initialDelaySeconds: 5
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: postgres-data
      restartPolicy: Always
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data
  test: false
status: {}
